plugins {
    id "com.google.protobuf" version "0.8.12"
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.techbayportal.itaste"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android {

        buildFeatures {

            dataBinding = true

            // for view binding:
            // viewBinding = true
        }
    }

    // Compile options
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    flavorDimensions "default"
    productFlavors {
        local {
            buildConfigField("String", "BASE_URL", "\"http://watya.techbayportal.com/public/api/production/v2/\"")
        }
        production {
            buildConfigField("String", "BASE_URL", "\"https://watya.info/api/production/v1/\"")
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    //Room Library
    implementation "androidx.room:room-runtime:2.2.5"
    implementation "androidx.room:room-ktx:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"


    //kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"

    //Hilt for dependency
    implementation 'com.google.dagger:hilt-android:2.28.1-alpha'
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    kapt 'com.google.dagger:hilt-android-compiler:2.28.1-alpha'
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'


    // Kotlin coroutines components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.10"

    //gson
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //okhttp3 logging interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    //okhttp
    implementation("com.squareup.okhttp3:okhttp:4.9.0")

    //Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //stetho
    implementation 'com.facebook.stetho:stetho:1.5.1'

    // Navigation Architecture component
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.2"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha02"

    // Proto DataStore
    implementation "androidx.datastore:datastore-core:1.0.0-alpha02"

    //picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    //Lottie for animations
    implementation 'com.airbnb.android:lottie:3.4.1'


    //swipe to referesh
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // for runtime permisions
    implementation 'com.karumi:dexter:6.0.2'

    // for ripple effect
    implementation 'com.balysv:material-ripple:1.0.2'

    //for shimmer effect
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.github.mukeshsolanki:android-otpview-pinview:2.1.2'
    //Material Design
    implementation 'com.google.android.material:material:1.3.0-alpha04'
    implementation 'com.psoffritti.slidingpanel:core:1.0.0'

    implementation 'com.arasthel:spannedgridlayoutmanager:3.0.2'


    //glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'
    implementation 'com.arasthel:spannedgridlayoutmanager:3.0.2'

    implementation 'com.afollestad.material-dialogs:core:3.3.0'

    //spinkit
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'

    //image picker including camera capture
    implementation 'com.opensooq.supernova:gligar:1.1.0'

    //country codes
    implementation 'com.github.joielechong:countrycodepicker:2.4.2'

    //chucker api
    debugImplementation "com.github.chuckerteam.chucker:library:3.4.0"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.4.0"

    implementation 'id.zelory:compressor:3.0.0'

    compile 'com.github.hkk595:Resizer:v1.5'
    implementation 'com.github.Spikeysanju:MotionToast:1.3.3.4'

}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }
    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}